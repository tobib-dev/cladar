// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: dept.sql

package database

import (
	"context"
)

const createDept = `-- name: CreateDept :one
INSERT INTO departments (id, dept_name)
VALUES (gen_random_uuid(), $1)
RETURNING id, dept_name
`

func (q *Queries) CreateDept(ctx context.Context, deptName string) (Department, error) {
	row := q.db.QueryRowContext(ctx, createDept, deptName)
	var i Department
	err := row.Scan(&i.ID, &i.DeptName)
	return i, err
}

const getAllDept = `-- name: GetAllDept :many
SELECT id, dept_name FROM departments
`

func (q *Queries) GetAllDept(ctx context.Context) ([]Department, error) {
	rows, err := q.db.QueryContext(ctx, getAllDept)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Department
	for rows.Next() {
		var i Department
		if err := rows.Scan(&i.ID, &i.DeptName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
